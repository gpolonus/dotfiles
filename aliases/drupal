
_load_drupal_vars() {
	if [[ "$(pwd)" == *"Sites/peoni-health"* ]] then;
		DRUPAL_THEME_PATH="/Users/griffenpolonus/Sites/peoni-health/docroot/themes/custom/peoni"
                THEME_BUILD_COMMAND="lando npm run webpack"
	fi;
}

alias bs="blt sync"

# Ensures that BLT can validate all the YAMLs during a git pre-push hook
ulimit -n 200000

alias uli="drush uli"

alias dcex="drush cex"
alias dcexy="drush cex -y"

alias dx="dcex"

dsql_select() {
        drush sqlq "SELECT * FROM $1"
}

dsql_describe() {
        drush sqlq "DESCRIBE $1"
}

dsql_table_grep() {
        drush sqlq "SHOW TABLES" | grep $1
}
alias table_grep="dsql_table_grep"

alias dsf="blt dsf"

ax() {
        acli xdebug
        if ["$(sax)" == "0"];
        then eax 1
        else eax 0;
        fi
}

alias rax="ax && ax"

alias dcexy="dcex -y"

hbs() {
        drush cr
        blt source:build:composer
        blt blt:init:settings
        blt drupal:update
        blt source:build:frontend
        dsf
        uli
}

fbs() {
        blt fm:setup:validate
        blt source:build:composer
        blt blt:init:settings
        blt drupal:update
        blt source:build:frontend
}

alias dcim="drush cim -y"
alias bcim="blt drupal:config:import"
alias bfb="blt source:build:frontend"

alias bbbs="bs || dcexy && bs"

alias cr="drush cr"

alias gadmin="drush ucrt gpolonus && drush urol administrator gpolonus && drush upwd gpolonus admin"
alias dcr="drush cc render"
alias ccr="dcr"

move_down() {
        drush sql-drop -y && drush sql-sync "@$1" @self -y
}

# Requires $DRUSH_SITE_FOLDER_MAP be defined
# declare -A DRUSH_SITE_FOLDER_MAP
# ldrush() {
#         while getopts ":l:" option; do
#                 case $option in
#                         l)
#                                 lando drush -l $OPTARG $@
#                                 return 0;;
#                 esac
#         done

#         [ -z "$DRUSH_SITE_FOLDER_MAP" ] && echo 'Need $DRUSH_SITE_FOLDER_MAP to be defined' && return 0

#         SITE=$(map_folder_to_value $DRUSH_SITE_FOLDER_MAP)
#         [ -z "$SITE" ] && lando drush $@ || lando drush -l $SITE $@
# }

alias dcex="drush cex"
alias uli="drush uli"
alias bs="time blt sync && uli"

bs_no_db() {
    blt source:build:composer
    blt blt:init:settings
#     blt drupal:sync:db
    blt drupal:update
    blt source:build:frontend
    blt cohesion:update
    uli
}

alias dsfp="blt drupal:sync:private-files"

alias lxdon="lando xdebug-on"

alias lxdoff="lando xdebug-off"

alias search-reindex="drush sapi-c && drush sapi-r && drush sapi-i"

theme_watch() {
        _load_drupal_vars
        cd $DRUPAL_THEME_PATH
        $THEME_BUILD_COMMAND
}

alias cr-theme="drush cc css-js && drush cc render"

alias sb="bs"

alias ddrush="drush @peoni.dev  "

delete_of_type() {
        drush entity:delete node --bundle=$1
}

alias dssx="dcexy && drush sitestudio:package:export -y"

alias move-backup="rm ~/Downloads/*.sql && gunzip ~/Downloads/*.sql.gz && mv ~/Downloads/*.sql ~/Sites/peoni-health/backups/import.sql"
alias move-backup-portal="move-backup && cp ~/Sites/peoni-health/backups/import.sql ~/Sites/peoni-portal/backups/import.sql"

alias dshell="~/dotfiles/drush_shell.mjs"

alias dursh="drush"

drusha() {
        _load_vars
        drush "@$DRUSH_ALIAS_PREFIX.$1" ${@:2}
}

alias drd="drusha dev "
alias drt="drusha test "
alias drp="drusha prod "
