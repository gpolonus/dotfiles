
alias gpod="git fetch && git pull origin develop"

gchb() {
        _load_vars
        git fetch
        git checkout $GIT_BRANCH_PREFIX$1
}

gcrb() {
        _load_vars
        git fetch
        git checkout origin/$GIT_DEV_BRANCH
        GIT_BRANCH_NAME=$GIT_BRANCH_PREFIX$1
        git checkout -b $GIT_BRANCH_NAME
        git push --no-verify --set-upstream origin $GIT_BRANCH_NAME
}

alias gfzf="git branch | grep "

grchb() {
        git checkout $(gfzf $1)
}

alias gits="git status"
alias gl="git log --decorate"
alias gc="git checkout "

alias gpnv="git push --no-verify"

alias gcnv="git commit --no-verify -m"

alias gds="gd --staged"

unalias gclean 2>/dev/null
gclean() {
        git clean -n
        read -p "Are you sure? " -n 1 -r
        echo    # (optional) move to a new line
        if [[ $REPLY =~ ^[Yy]$ ]]
        then
                git clean -f
        fi
}

gacm() {
        _load_vars

        git add -A

        if [ -z $JIRA_TICKET_PREFIX ]; then
                gcm "${1}"
                return 0
        fi

        TICKET_ID=$(git branch | grep "^\*" | grep -o "$JIRA_TICKET_PREFIX\d*")
        gcm "$TICKET_ID: ${1}."
}

gacmnv() {
        _load_vars

        git add -A

        if [ -z $JIRA_TICKET_PREFIX ]; then
                gcmnv "${1}"
                return 0
        fi

        TICKET_ID=$(git branch | grep "^\*" | grep -o "$JIRA_TICKET_PREFIX\d*")
        gcmnv "$TICKET_ID: ${1}."
}

alias gnuke="git reset --hard && git clean -f"

grlast() {
        git reset "$(git log --format="%H" -n 2 | tail -1)"
}

alias zgco='git co $(git branch | fzf)'
alias gcnvm="git commit --no-verify -m "
alias gacnvm="git add . && git commit --no-verify -m "
alias gitnp="git --no-pager"
alias gd="gitnp diff"

gpom() {
        _load_vars
        git fetch && git pull origin $GIT_DEV_BRANCH
}

alias gb="git branch --show-current"
alias gp="git push"

gchd(){
        _load_vars
        git fetch
        git branch -D $GIT_DEV_BRANCH
        git checkout origin/$GIT_DEV_BRANCH
        git checkout -b $GIT_DEV_BRANCH
}

alias gchm="gchd"

gdb() {
        _load_vars
        git branch -D $GIT_BRANCH_PREFIX$1
}

alias gbs="git branch"
alias gstash="git stash clear && git add . && gds && git stash -m "
alias gapply="git stash apply"

alias gpl="git pull"

alias gf="git fetch"

alias tagm="git tag -n9"

alias ghashtags="git show-ref --tags"

alias gtn="git tag -n"

gt() {
        git tag -a $1 -m "Added tag $1 for changeset $(git log --format="%H" -n 1 | head -c 12)"
        gtn
}

alias gpt="git push --tags"

alias gfzf='git checkout $(git branch | fzf)'

gcm() {
        git commit -m "$1"
}

gcmnv() {
        git commit --no-verify -m "$1"
}

alias commit-of-tag="git rev-list -n 1 "

alias gpf="gp --force"

function gitzip() {
  git archive -o $@.zip HEAD
}
